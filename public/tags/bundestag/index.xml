<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bundestag on my little jotter</title>
    <link>https://mylittlejotter.netlify.app/tags/bundestag/</link>
    <description>Recent content in Bundestag on my little jotter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://mylittlejotter.netlify.app/tags/bundestag/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Speeches in german Parliament</title>
      <link>https://mylittlejotter.netlify.app/post/2020-12-30-exploring-bundestag-speeches/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mylittlejotter.netlify.app/post/2020-12-30-exploring-bundestag-speeches/</guid>
      <description>Bla bla bla Einleitungsgedöns. Was über die Daten.  Dann kommt der simple Plot.   Und ciao. data %&amp;lt;&amp;gt;% filter(firstName != &amp;quot;Not found&amp;quot;, positionShort == &amp;quot;Member of Parliament&amp;quot;) %&amp;gt;% mutate(year = year(date), full_name = paste(firstName, lastName)) context_data &amp;lt;- data %&amp;gt;% group_by(full_name) %&amp;gt;% filter(year == max(year)) %&amp;gt;% ungroup() %&amp;gt;% select(full_name, positionShort, party = abbreviation) %&amp;gt;% unique() data %&amp;lt;&amp;gt;% group_by(year, full_name) %&amp;gt;% count(name = &amp;quot;sum_speeches&amp;quot;) %&amp;gt;% ungroup() all_years &amp;lt;- tibble(year = seq(min(data$year), max(data$year), 1)) all_combos &amp;lt;- merge(data %&amp;gt;% select(full_name) %&amp;gt;% distinct(), all_years, all = TRUE) all_data_interp &amp;lt;- merge(data, all_combos, all.</description>
    </item>
    
  </channel>
</rss>
